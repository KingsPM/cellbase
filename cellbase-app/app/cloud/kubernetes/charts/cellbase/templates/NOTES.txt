
1. Connect directly using these URLs:
{{- if .Values.rest.ingress.enabled }}
{{- $paths := .Values.rest.ingress.paths -}}
{{- range $host := .Values.rest.ingress.hosts }}
  {{- range $path := $paths }}
  http{{ if $.Values.rest.ingress.tls }}s{{ end }}://{{ $host | default "EXTERNAL_CLUSTER_IP" }}{{ $path | replace "(/|$)" "" }}
  {{- end }}
{{- end }}
{{- end }}

2. Get the application URL by running these commands:
{{- if contains "NodePort" .Values.rest.service.type }}
  export NODE_PORT=$(kubectl get --context {{ .Values.kubeContext }} --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "cellbase.fullname" . }})
  export NODE_IP=$(kubectl get nodes --context {{ .Values.kubeContext }} --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.rest.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --context {{ .Values.kubeContext }} --namespace {{ .Release.Namespace }} svc -w {{ include "cellbase.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --context {{ .Values.kubeContext }} --namespace {{ .Release.Namespace }} {{ include "cellbase.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.rest.service.port }}
{{- else if contains "ClusterIP" .Values.rest.service.type }}

Pod port forward
  export POD_NAME=$(kubectl get pods --context {{ .Values.kubeContext }} --namespace {{ .Release.Namespace }} -l "app={{ .Values.rest.name }},app.kubernetes.io/name={{ include "cellbase.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  kubectl --context {{ .Values.kubeContext }} --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:80

Service port forward
  kubectl --context {{ .Values.kubeContext }} --namespace {{ .Release.Namespace }} port-forward "service/{{ .Values.rest.name }}" 8080:80

Then visit:
  http://localhost:8080/cellbase

{{- end }}

3. Connect to the worker node

  kubectl exec -it --context {{ .Values.kubeContext }} --namespace {{ .Release.Namespace }} "deployments/{{ .Values.worker.name }}" -- /bin/bash


{{- if .Values.mongodb.deploy.enabled }}

4. Connect to MongoDB database running these commands:

  kubectl --context {{ .Values.kubeContext }} --namespace {{ .Release.Namespace }} port-forward "service/{{ .Values.mongodb.deploy.name }}-svc" 27018:27017
  mongo --host localhost --port 27018 --authenticationDatabase {{ .Values.mongodb.authenticationDatabase }} --authenticationMechanism {{ .Values.mongodb.authenticationMechanism }} --username {{ .Values.mongodb.user }} --password XXXXX


{{- end }}
