name: CellBase Release workflow

on:
  push:
    tags:
      - '*'

jobs:
  deploy:
    name: Build and deploy CellBase libs, Java docs and Docker images in Maven Central and DockerHub repositories
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '10'
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          server-id: ossrh                        # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_NEXUS_USER       # env variable for username in deploy
          server-password: MAVEN_NEXUS_PASSWORD   # env variable for token in deploy

      ## making requests via Python needs special package
      - name: Install Python package
        run: pip3 install requests

      ## Build and deploy Docker images to DockerHub
      - name: Login to dockerhub
        run: docker login -u ${{ secrets.DOCKER_HUB_USER }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Build and publish Docker images to DockerHub
        run: python3 ./build/cloud/docker/docker-build.py push

      ## Get CellBase version
      - name: Get CellBase version
        id: get_version
        run: echo ::set-output name=VERSION::$(grep '<cellbase.version>' pom.xml | sed 's/cellbase.version//g' | sed 's/[<>/ ]//g')

      ## Delete snapshot
      - name: Delete SNAPSHOT image on dockerhub, if present
        env:
          SNAPSHOT_TAG: "${{ steps.get_version.outputs.VERSION }}-SNAPSHOT"
        run: python3 ./build/cloud/docker/docker-build.py delete --username ${{ secrets.DOCKER_HUB_USER }} --password ${{ secrets.DOCKER_HUB_PASSWORD}} --tag ${SNAPSHOT_TAG}

      ## Publish GitHub release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: "Description of release"
          draft: false
          prerelease: false
