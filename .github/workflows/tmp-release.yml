name: CellBase Release workflow (tmp)

on:
  push:
    tags:
      - '*'

jobs:
  deploy:
    name: Build and deploy CellBase libs, Java docs and Docker images in Maven Central and DockerHub repositories
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '10'
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          server-id: ossrh                        # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_NEXUS_USER       # env variable for username in deploy
          server-password: MAVEN_NEXUS_PASSWORD   # env variable for token in deploy

      - name: install CellBase
        run: mvn install -DskipTests=true

      ## Publish GitHub release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: "Description of release"
          draft: false
          prerelease: false

      ## Copy jar zip file to server
      - name: Get CellBase version
        id: get_version
        run: echo ::set-output name=VERSION::$(grep '<cellbase.version>' pom.xml | sed 's/cellbase.version//g' | sed 's/[<>/ ]//g')

      - name: Deploy to server
        id: deploy
        uses: Pendect/action-rsyncer@v1.1.0
        env:
          DEPLOY_KEY: ${{secrets.SCP_PRIVATE_KEY}}
        with:
          flags: '-avzr '
          options: ''
          ssh_options: ''
          src: 'https://api.github.com/repos/opencb/cellbase/tarball/${{ steps.get_version.outputs.VERSION }}/*'
          dest: '${{ secrets.SCP_SITE_USER }}@128.232.224.128:/mnt/data/opencb/cellbase/java/${{ steps.get_version.outputs.VERSION }}'
      - name: Display status from deploy
        run: echo "${{ steps.deploy.outputs.status }}"