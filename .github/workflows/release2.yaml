name: CellBase Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        mongodb-version: ["4.2"]
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Launch MongoDB
        run: sudo docker run --name mongo -d -p 27017:27017 mongo:${{ matrix.mongodb-version }}
      - name: Build with Maven
        run: mvn -T 2 clean install
  deploy_maven:
    runs-on: ubuntu-18.04
    needs: build
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build with Maven
          run: mvn -T 2 clean install -DskipTests
      - name: Release Maven package
        uses: samuelmeuli/action-maven-publish@v1
        with:
          gpg_private_key: ${{ secrets.MAVEN_PRIVATE_KEY }}
          gpg_passphrase: ${{ secrets.MAVEN_PASSPHRASE }}
          nexus_username: ${{ secrets.MAVEN_NEXUS_USER }}
          nexus_password: ${{ secrets.MAVEN_NEXUS_PASSWORD }}
  docker:
    runs-on: ubuntu-18.04
    needs: build
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build with Maven
        run: mvn -T 2 clean install -DskipTests
      - name: Login to dockerhub
        run: docker login -u ${{ secrets.DOCKER_HUB_USER }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Build and publish Docker images to DockerHub
        run: ./build/cloud/docker/docker-build.sh push ${{ steps.get_version.outputs.VERSION }}
  javadocs:
    runs-on: ubuntu-18.04
    needs: build
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build with Maven
          run: mvn -T 2 clean install -DskipTests
      - name: Generate Javadocs
        run: mvn javadoc:aggregate
      - name: Deploy Javadocs
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BASE_BRANCH: next # The branch the action should deploy from.
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: target/site # The folder the action should deploy.
  pypi:
    runs-on: ubuntu-18.04
    needs: build
    steps:
      - uses: actions/checkout@v1
      - name: Build PyPI
        run: ./clients/python/pypi-build.sh build
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_PASSWORD }}
          packages_dir: clients/python/dist